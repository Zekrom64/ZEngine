package com.zekrom_64.ze.libav.enums;

import java.util.Arrays;
import java.util.Iterator;

import org.bridj.BridJ;
import org.bridj.IntValuedEnum;

public enum AVCodecID implements IntValuedEnum<AVCodecID> {
	AV_CODEC_ID_NONE,
	AV_CODEC_ID_MPEG1VIDEO,
	AV_CODEC_ID_MPEG2VIDEO,
	AV_CODEC_ID_H261,
	AV_CODEC_ID_H263,
	AV_CODEC_ID_HV10,
	AV_CODEC_ID_HV20,
	AV_CODEC_ID_MJPEG,
	AV_CODEC_ID_MJPEGB,
	AV_CODEC_ID_LJPEG,
	AV_CODEC_ID_SP5X,
	AV_CODEC_ID_JPEGLS,
	AV_CODEC_ID_MPEG4,
	AV_CODEC_ID_MSMPEG4V1,
	AV_CODEC_ID_MSMPEG4V2,
	AV_CODEC_ID_MSMPEG4V3,
	AV_CODEC_ID_WMV1,
	AV_CODEC_ID_WMV2,
	AV_CODEC_ID_H263P,
	AV_CODEC_ID_H263I,AV_CODEC_ID_FLV1,
	AV_CODEC_ID_SVQ1,
	AV_CODEC_ID_SVQ3,
	AV_CODEC_ID_DVVIDEO,
	AV_CODEC_ID_HUFFYUV,
	AV_CODEC_ID_CYUV,
	AV_CODEC_ID_H264,
	AV_CODEC_ID_INDEO3,
	AV_CODEC_ID_VP3,
	AV_CODEC_ID_THEORA,
	AV_CODEC_ID_ASV1,
	AV_CODEC_ID_ASV2,
	AV_CODEC_ID_FFV1,
	AV_CODEC_ID_4XM,
	AV_CODEC_ID_VCR1,
	AV_CODEC_ID_CLJR,
	AV_CODEC_ID_MDEC,
	AV_CODEC_ID_ROQ,
	AV_CODEC_ID_INTERPLAY_VIDEO,
	AV_CODEC_ID_XAN_WC3,
	AV_CODEC_ID_XAN_WC4,
	AV_CODEC_ID_RPZA,
	AV_CODEC_ID_CINEPAK,
	AV_CODEC_ID_WS_VQA,
	AV_CODEC_ID_MSRLE,
	AV_CODEC_ID_MSVIDEO1,
	AV_CODEC_ID_IDCIN,
	AV_CODEC_ID_8BPS,
	AV_CODEC_ID_SMC,
	AV_CODEC_ID_FLIC,
	AV_CODEC_ID_TRUEMOTION1,
	AV_CODEC_ID_VMDVIDEO,
	AV_CODEC_ID_MSZH,
	AV_CODEC_ID_ZLIB,
	AV_CODEC_ID_QTRLE,
	AV_CODEC_ID_TSCC,
	AV_CODEC_ID_ULTI,
	AV_CODEC_ID_QDRAW,
	AV_CODEC_ID_VIXL,
	AV_CODEC_ID_QPEG,
	AV_CODEC_ID_PNG,
	AV_CODEC_ID_PPM,
	AV_CODEC_ID_PBM,
	AV_CODEC_ID_PGM,
	AV_CODEC_ID_PGMYUV,
	AV_CODEC_ID_PAM,
	AV_CODEC_ID_FFVHUFF,
	AV_CODEC_ID_RV30,
	AV_CODEC_ID_RV40,
	AV_CODEC_ID_VC1,
	AV_CODEC_ID_WMV3,
	AV_CODEC_ID_LOCO,
	AV_CODEC_ID_WNV1,
	AV_CODEC_ID_AASC,
	AV_CODEC_ID_INDEO2,
	AV_CODEC_ID_FRAPS,
	AV_CODEC_ID_TRUEMOTION2,
	AV_CODEC_ID_BMP,
	AV_CODEC_ID_CSCD,
	AV_CODEC_ID_MMVIDEO,
	AV_CODEC_ID_ZMBV,
	AV_CODEC_ID_AVS,
	AV_CODEC_ID_SMACKVIDEO,
	AV_CODEC_ID_NUV,
	AV_CODEC_ID_KMVC,
	AV_CODEC_ID_FLASHSV,
	AV_CODEC_ID_CAVS,
	AV_CODEC_ID_JPEG2000,
	AV_CODEC_ID_VMNC,
	AV_CODEC_ID_VP5,
	AV_CODEC_ID_VP6,
	AV_CODEC_ID_VP6F,
	AV_CODEC_ID_TARGA,
	AV_CODEC_ID_DSICINVIDEO,
	AV_CODEC_ID_TIERTEXSEQVIDEO,
	AV_CODEC_ID_TIFF,
	AV_CODEC_ID_GIF,
	AV_CODEC_ID_DXA,
	AV_CODEC_ID_DNXHD,
	AV_CODEC_ID_THP,
	AV_CODEC_ID_SGI,
	AV_CODEC_ID_C93,
	AV_CODEC_ID_BETHSOFTVID,
	AV_CODEC_ID_PTX,
	AV_CODEC_ID_TXD,
	AV_CODEC_ID_VP6A,
	AV_CODEC_ID_AMV,
	AV_CODEC_ID_VB,
    AV_CODEC_ID_PCX,
    AV_CODEC_ID_SUNRAST,
    AV_CODEC_ID_INDEO4,
    AV_CODEC_ID_INDEO5,
    AV_CODEC_ID_MIMIC,
    AV_CODEC_ID_RL2,
    AV_CODEC_ID_ESCAPE124,
    AV_CODEC_ID_DIRAC,
    AV_CODEC_ID_BFI,
    AV_CODEC_ID_CMV,
    AV_CODEC_ID_MOTIONPIXELS,
    AV_CODEC_ID_TGV,
    AV_CODEC_ID_TGQ,
    AV_CODEC_ID_TQI,
    AV_CODEC_ID_AURA,
    AV_CODEC_ID_AURA2,
    AV_CODEC_ID_V210X,
    AV_CODEC_ID_TMV,
    AV_CODEC_ID_V210,
    AV_CODEC_ID_DPX,
    AV_CODEC_ID_MAD,
    AV_CODEC_ID_FRWU,
    AV_CODEC_ID_FLASHSV2,
    AV_CODEC_ID_CDGRAPHICS,
    AV_CODEC_ID_R210,
    AV_CODEC_ID_ANM,
    AV_CODEC_ID_BINKVIDEO,
    AV_CODEC_ID_IFF_ILBM,
    AV_CODEC_ID_IFF_BYTERUN1,
    AV_CODEC_ID_KGV1,
    AV_CODEC_ID_YOP,
    AV_CODEC_ID_VP8,
    AV_CODEC_ID_PICTOR,
    AV_CODEC_ID_ANSI,
    AV_CODEC_ID_A64_MULTI,
    AV_CODEC_ID_A64_MULTI5,
    AV_CODEC_ID_R10K,
    AV_CODEC_ID_MXPEG,
    AV_CODEC_ID_LAGARITH,
    AV_CODEC_ID_PRORES,
    AV_CODEC_ID_JV,
    AV_CODEC_ID_DFA,
    AV_CODEC_ID_WMV3IMAGE,
    AV_CODEC_ID_VC1IMAGE,
    AV_CODEC_ID_UTVIDEO,
    AV_CODEC_ID_BMV_VIDEO,
    AV_CODEC_ID_VBLE,
    AV_CODEC_ID_DXTORY,
    AV_CODEC_ID_V410,
    AV_CODEC_ID_XWD,
    AV_CODEC_ID_CDXL,
    AV_CODEC_ID_XBM,
    AV_CODEC_ID_ZEROCODEC,
    AV_CODEC_ID_MSS1,
    AV_CODEC_ID_MSA1,
    AV_CODEC_ID_TSCC2,
    AV_CODEC_ID_MTS2,
    AV_CODEC_ID_CLLC,
    AV_CODEC_ID_MSS2,
    AV_CODEC_ID_VP9,
    AV_CODEC_ID_AIC,
    AV_CODEC_ID_ESCAPE130,
    AV_CODEC_ID_G2M,
    AV_CODEC_ID_WEBP,
    AV_CODEC_ID_HNM4_VIDEO,
    AV_CODEC_ID_HEVC,
    AV_CODEC_ID_FIC,
    AV_CODEC_ID_ALIAS_PIX,
    AV_CODEC_ID_BRENDER_PIX,
    AV_CODEC_ID_PAF_VIDEO,
    AV_CODEC_ID_EXR,
    AV_CODEC_ID_VP7,
    AV_CODEC_ID_SANM,
    AV_CODEC_ID_SGIRLE,
    AV_CODEC_ID_MVC1,
    AV_CODEC_ID_MVC2,
    
    /* various PCM "codecs" */
    AV_CODEC_ID_FIRST_AUDIO(0x10000),     ///< A dummy id pointing at the start of audio codecs
    AV_CODEC_ID_PCM_S16LE(0x10000),
    AV_CODEC_ID_PCM_S16BE(0x10001),
    AV_CODEC_ID_PCM_U16LE(0x10002),
    AV_CODEC_ID_PCM_U16BE(0x10003),
    AV_CODEC_ID_PCM_S8(0x10004),
    AV_CODEC_ID_PCM_U8(0x10005),
    AV_CODEC_ID_PCM_MULAW(0x10006),
    AV_CODEC_ID_PCM_ALAW(0x10007),
    AV_CODEC_ID_PCM_S32LE(0x10008),
    AV_CODEC_ID_PCM_S32BE(0x10009),
    AV_CODEC_ID_PCM_U32LE(0x1000a),
    AV_CODEC_ID_PCM_U32BE(0x1000b),
    AV_CODEC_ID_PCM_S24LE(0x1000c),
    AV_CODEC_ID_PCM_S24BE(0x1000d),
    AV_CODEC_ID_PCM_U24LE(0x1000e),
    AV_CODEC_ID_PCM_U24BE(0x1000f),
    AV_CODEC_ID_PCM_S24DAUD(0x10010),
    AV_CODEC_ID_PCM_ZORK(0x10011),
    AV_CODEC_ID_PCM_S16LE_PLANAR(0x10012),
    AV_CODEC_ID_PCM_DVD(0x10013),
    AV_CODEC_ID_PCM_F32BE(0x10014),
    AV_CODEC_ID_PCM_F32LE(0x10015),
    AV_CODEC_ID_PCM_F64BE(0x10016),
    AV_CODEC_ID_PCM_F64LE(0x10017),
    AV_CODEC_ID_PCM_BLURAY(0x10018),
    AV_CODEC_ID_PCM_LXF(0x10019),
    AV_CODEC_ID_S302M(0x1001a),
    AV_CODEC_ID_PCM_S8_PLANAR(0x1001b),
    AV_CODEC_ID_PCM_S24LE_PLANAR(0x1001c),
    AV_CODEC_ID_PCM_S32LE_PLANAR(0x1001d),
    
    /* various ADPCM codecs */
    AV_CODEC_ID_ADPCM_IMA_QT(0x11000),
    AV_CODEC_ID_ADPCM_IMA_WAV(0x11001),
    AV_CODEC_ID_ADPCM_IMA_DK3(0x11002),
    AV_CODEC_ID_ADPCM_IMA_DK4(0x11003),
    AV_CODEC_ID_ADPCM_IMA_WS(0x11004),
    AV_CODEC_ID_ADPCM_IMA_SMJPEG(0x11005),
    AV_CODEC_ID_ADPCM_MS(0x11006),
    AV_CODEC_ID_ADPCM_4XM(0x11007),
    AV_CODEC_ID_ADPCM_XA(0x11008),
    AV_CODEC_ID_ADPCM_ADX(0x11009),
    AV_CODEC_ID_ADPCM_EA(0x1100a),
    AV_CODEC_ID_ADPCM_G726(0x1100b),
    AV_CODEC_ID_ADPCM_CT(0x1100c),
    AV_CODEC_ID_ADPCM_SWF(0x1100d),
    AV_CODEC_ID_ADPCM_YAMAHA(0x1100e),
    AV_CODEC_ID_ADPCM_SBPRO_4(0x1100f),
    AV_CODEC_ID_ADPCM_SBPRO_3(0x11010),
    AV_CODEC_ID_ADPCM_SBPRO_2(0x11011),
    AV_CODEC_ID_ADPCM_THP(0x11012),
    AV_CODEC_ID_ADPCM_IMA_AMV(0x11013),
    AV_CODEC_ID_ADPCM_EA_R1(0x11014),
    AV_CODEC_ID_ADPCM_EA_R3(0x11015),
    AV_CODEC_ID_ADPCM_EA_R2(0x11016),
    AV_CODEC_ID_ADPCM_IMA_EA_SEAD(0x11017),
    AV_CODEC_ID_ADPCM_IMA_EA_EACS(0x11018),
    AV_CODEC_ID_ADPCM_EA_XAS(0x11019),
    AV_CODEC_ID_ADPCM_EA_MAXIS_XA(0x1101a),
    AV_CODEC_ID_ADPCM_IMA_ISS(0x1101b),
    AV_CODEC_ID_ADPCM_G722(0x1101c),
    AV_CODEC_ID_ADPCM_IMA_APC(0x1101d),
    AV_CODEC_ID_ADPCM_VIMA(0x1101e),
    
    /* AMR */
    AV_CODEC_ID_AMR_NB(0x12000),
    AV_CODEC_ID_AMR_WB(0x12001),

    /* RealAudio codecs*/
    AV_CODEC_ID_RA_144(0x13000),
    AV_CODEC_ID_RA_288(0x13001),

    /* various DPCM codecs */
    AV_CODEC_ID_ROQ_DPCM(0x14000),
    AV_CODEC_ID_INTERPLAY_DPCM(0x14001),
    AV_CODEC_ID_XAN_DPCM(0x14002),
    AV_CODEC_ID_SOL_DPCM(0x14003),
    
    /* audio codecs */
    AV_CODEC_ID_MP2(0x15000),
    AV_CODEC_ID_MP3(0x15001), ///< preferred ID for decoding MPEG audio layer 1, 2 or 3
    AV_CODEC_ID_AAC(0x15002),
    AV_CODEC_ID_AC3(0x15003),
    AV_CODEC_ID_DTS(0x15004),
    AV_CODEC_ID_VORBIS(0x15005),
    AV_CODEC_ID_DVAUDIO(0x15006),
    AV_CODEC_ID_WMAV1(0x15007),
    AV_CODEC_ID_WMAV2(0x15008),
    AV_CODEC_ID_MACE3(0x15009),
    AV_CODEC_ID_MACE6(0x1500a),
    AV_CODEC_ID_VMDAUDIO(0x1500b),
    AV_CODEC_ID_FLAC(0x1500c),
    AV_CODEC_ID_MP3ADU(0x1500d),
    AV_CODEC_ID_MP3ON4(0x1500e),
    AV_CODEC_ID_SHORTEN(0x1500f),
    AV_CODEC_ID_ALAC(0x15010),
    AV_CODEC_ID_WESTWOOD_SND1(0x15011),
    AV_CODEC_ID_GSM(0x15012), ///< as in Berlin toast format
    AV_CODEC_ID_QDM2(0x15013),
    AV_CODEC_ID_COOK(0x15014),
    AV_CODEC_ID_TRUESPEECH(0x15015),
    AV_CODEC_ID_TTA(0x15016),
    AV_CODEC_ID_SMACKAUDIO(0x15017),
    AV_CODEC_ID_QCELP(0x15018),
    AV_CODEC_ID_WAVPACK(0x15019),
    AV_CODEC_ID_DSICINAUDIO(0x1501a),
    AV_CODEC_ID_IMC(0x1501b),
    AV_CODEC_ID_MUSEPACK7(0x1501c),
    AV_CODEC_ID_MLP(0x1501d),
    AV_CODEC_ID_GSM_MS(0x1501e), /* as found in WAV */
    AV_CODEC_ID_ATRAC3(0x1501f),
    AV_CODEC_ID_APE(0x15020),
    AV_CODEC_ID_NELLYMOSER(0x15021),
    AV_CODEC_ID_MUSEPACK8(0x15022),
    AV_CODEC_ID_SPEEX(0x15023),
    AV_CODEC_ID_WMAVOICE(0x15024),
    AV_CODEC_ID_WMAPRO(0x15025),
    AV_CODEC_ID_WMALOSSLESS(0x15026),
    AV_CODEC_ID_ATRAC3P(0x15027),
    AV_CODEC_ID_EAC3(0x15028),
    AV_CODEC_ID_SIPR(0x15029),
    AV_CODEC_ID_MP1(0x1502a),
    AV_CODEC_ID_TWINVQ(0x1502b),
    AV_CODEC_ID_TRUEHD(0x1502c),
    AV_CODEC_ID_MP4ALS(0x1502d),
    AV_CODEC_ID_ATRAC1(0x1502e),
    AV_CODEC_ID_BINKAUDIO_RDFT(0x1502f),
    AV_CODEC_ID_BINKAUDIO_DCT(0x15030),
    AV_CODEC_ID_AAC_LATM(0x15031),
    AV_CODEC_ID_QDMC(0x15032),
    AV_CODEC_ID_CELT(0x15033),
    AV_CODEC_ID_G723_1(0x15034),
    AV_CODEC_ID_G729(0x15035),
    AV_CODEC_ID_8SVX_EXP(0x15036),
    AV_CODEC_ID_8SVX_FIB(0x15037),
    AV_CODEC_ID_BMV_AUDIO(0x15038),
    AV_CODEC_ID_RALF(0x15039),
    AV_CODEC_ID_IAC(0x1503a),
    AV_CODEC_ID_ILBC(0x1503b),
    AV_CODEC_ID_OPUS(0x1503c),
    AV_CODEC_ID_COMFORT_NOISE(0x1503d),
    AV_CODEC_ID_TAK(0x1503e),
    AV_CODEC_ID_METASOUND(0x1503f),
    AV_CODEC_ID_PAF_AUDIO(0x15040),
    AV_CODEC_ID_ON2AVC(0x15041),
    
    /* subtitle codecs */
    AV_CODEC_ID_FIRST_SUBTITLE(0x17000),          ///< A dummy ID pointing at the start of subtitle codecs.
    AV_CODEC_ID_DVD_SUBTITLE(0x17000),
    AV_CODEC_ID_DVB_SUBTITLE(0x17001),
    AV_CODEC_ID_TEXT(0x17002),  ///< raw UTF-8 text
    AV_CODEC_ID_XSUB(0x17003),
    AV_CODEC_ID_SSA(0x17004),
    AV_CODEC_ID_MOV_TEXT(0x17005),
    AV_CODEC_ID_HDMV_PGS_SUBTITLE(0x17006),
    AV_CODEC_ID_DVB_TELETEXT(0x17007),
    AV_CODEC_ID_SRT(0x17008),

    /* other specific kind of codecs (generally used for attachments) */
    AV_CODEC_ID_FIRST_UNKNOWN(0x18000),           ///< A dummy ID pointing at the start of various fake codecs.
    AV_CODEC_ID_TTF(0x18000),

    AV_CODEC_ID_PROBE(0x19000), ///< codec_id is not known (like AV_CODEC_ID_NONE) but lavf should attempt to identify it

    AV_CODEC_ID_MPEG2TS(0x20000), /**< _FAKE_ codec to indicate a raw MPEG-2 TS
                                * stream (only used by libavformat) */
    AV_CODEC_ID_MPEG4SYSTEMS(0x20001), /**< _FAKE_ codec to indicate a MPEG-4 Systems
                                * stream (only used by libavformat) */
    AV_CODEC_ID_FFMETADATA(0x21000),   ///< Dummy codec for streams containing only metadata information.
	;
	
	static {
		BridJ.register();
	}
	
	private AVCodecID(int id) {
		value = id;
	}
	
	private AVCodecID() {
		value = ordinal();
	}
	
	private int value;

	@Override
	public long value() {
		return value;
	}

	@Override
	public Iterator<AVCodecID> iterator() {
		return Arrays.asList(values()).iterator();
	}

}
