package com.zekrom_64.ze.logic.synth;

import com.jsyn.unitgen.UnitOscillator;
import com.jsyn.util.PseudoRandom;

/** Custom unit generator to generate random square wave noise, used mostly
 * for sound synthesis chips.
 * 
 * @author Zekrom_64
 *
 */
public class NoiseOscillator extends UnitOscillator {

	private PseudoRandom rand = new PseudoRandom();
	
	/** The last value generated by the pseudo-random number generator */
	public double lastValue = 0;
	
	public NoiseOscillator() {}
	
	public NoiseOscillator(double freq) {
		frequency.set(freq);
	}
	
	public NoiseOscillator(double freq, double amp) {
		frequency.set(freq);
		amplitude.set(amp);
	}
	
	@Override
	public void generate(int start, int limit) {
        double[] frequencies = frequency.getValues();
        double[] amplitudes = amplitude.getValues();
        double[] outputs = output.getValues();
        
        double currentPhase = phase.getValue();
        
		for(int i = start; i < limit; i++) {
			double phaseIncrement = convertFrequencyToPhaseIncrement(frequencies[i]);
			currentPhase += phaseIncrement;
			if (currentPhase<-1.0) {
				lastValue = rand.nextRandomDouble();
				currentPhase += 2;
			} else if (currentPhase>1.0) {
				lastValue = rand.nextRandomDouble();
				currentPhase -= 2;
			}
			
			outputs[i] = amplitudes[i] * lastValue;
		}
		
		phase.setValue(currentPhase);
	}

}
